#!/usr/bin/env bash

echo "
ðŸ”§ Run Once [Before] Setup Starting..."

echo "--- CHEZMOI DEBUG ---"
echo "Username:     {{ .chezmoi.username }}"
echo "Host Name:    {{ .chezmoi.hostname }}"
echo "Home Directory: {{ .chezmoi.homeDir }}"
echo "Source Directory: {{ .chezmoi.sourceDir }}"
echo "OS Detected:   {{ .chezmoi.os }}"
echo "Arch Detected: {{ .chezmoi.arch }}"
echo "--------------------------"

{{- if not .newMachine }}
echo "ðŸš§ Skipping package installation (newMachine=false)
"
exit 0
{{- end }}

{{- if ne .chezmoi.os "darwin" }}
echo "ðŸš§ Skipping package installation (not macOS)
"
exit 0
{{- end }}

#--- Architecture Detection for Homebrew on Apple Silicon ---
# The variables CHEZMOI_OS and CHEZMOI_ARCH are populated by `chezmoi apply`
# before this script is executed.
CHEZMOI_OS="{{ .chezmoi.os }}"
CHEZMOI_ARCH="{{ .chezmoi.arch }}"

BREW_CMD="brew"

# We only need special handling on macOS ("darwin").
if [[ "$CHEZMOI_OS" == "darwin" ]]; then
  if [[ "$CHEZMOI_ARCH" == "amd64" ]]; then
    if [[ "$(sysctl -n hw.optional.arm64)" == "1" ]]; then
      echo "Rosetta detected on Apple Silicon hardware. Forcing Homebrew to run natively."
      BREW_CMD="arch -arm64 brew"
    fi
  fi
fi

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

#-------------------------------------------------------------------------------
#--                      Homebrew Package Manager Setup
#-------------------------------------------------------------------------------

# --- Install Homebrew if not installed ---
# The official installer handles architecture detection correctly on its own...
if ! command_exists brew; then
  echo "Homebrew not found. Installing..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi
echo "Homebrew is installed."

# --- Taps (3rd Party - repos)---
echo "Checking and installing required brew taps..."
taps=(
  "FelixKratz/formulae"
  "nikitabobko/tap"
  "oven-sh/bun"
  "pulumi/tap"
  "sst/tap"
)
for tap in "${taps[@]}"; do
  if ! $BREW_CMD tap | grep -q "^${tap}$"; then
    echo "Tapping ${tap}..."
    $BREW_CMD tap "${tap}"
  else
    echo "Tap ${tap} is already added."
  fi
done

# --- Packages ---
echo "Checking and installing required brew packages.."
packages=(
  "borders"
  "FelixKratz/formulae/sketchybar"
  "gitmux"
  "morantron/tmux-fingers/tmux-fingers"
  "kanata"
  "kitty"
  "koekeishiya/formulae/skhd"
  "mailsy"
  "pngpaste"
  "rbw"
  "sesh"
  "speedtest-cli"
  "spicetify-cli"
  "switchaudio-osx"
  "thefuck"
  "tree-sitter-cli"
)
for pkg in "${packages[@]}"; do
  pkg_name="${pkg##*/}"
  if ! $BREW_CMD list --formula | grep -q "^${pkg_name}$"; then
    echo "Installing ${pkg}..."
    $BREW_CMD install "${pkg}"
  else
    echo "${pkg_name} is already installed."
  fi
done

# --- Cask Packages (Gui/Fonts) ---
echo "Checking and installing required brew casks.."
cask_packages=(
  "appcleaner"
  "betterdisplay"
  "bitwarden"
  "brave-browser"
  "discord"
  "docker"
  "firefox"
  "flameshot"
  "font-sf-pro"
  "font-space-mono-nerd-font"
  "ghostty"
  "google-chrome"
  "homerow"
  "localsend"
  "istat-menus"
  "karabiner-elements"
  "kindavim",
  "kitty"
  "latest"
  "logi-options+"
  "marta"
  "microsoft-edge"
  "microsoft-outlook"
  "microsoft-teams"
  "mouseless"
  "nikitabobko/tap/aerospace"
  "obsidian"
  "raycast"
  "sf-symbols"
  "slack"
  "spotify"
  "vlc"
  "wezterm"
  "whimsical"
  "zen"
  "zoom"
)
for pkg in "${cask_packages[@]}"; do
  # Extract just the cask name (everything after the last /)
  cask_name="${pkg##*/}"
  # Use brew info to check if cask is installed (more reliable than brew list)
  if $BREW_CMD info --cask "${pkg}" 2>/dev/null | grep -q "Not installed"; then
    echo "Installing cask ${pkg}..."
    $BREW_CMD install --cask "${pkg}" || echo "Warning: Failed to install ${pkg}, skipping..."
  else
    echo "Cask ${cask_name} is already installed."
  fi
done
