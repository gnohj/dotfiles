#!/usr/bin/env zsh
# Environment variables for gnohj's shell configuration
# This file is managed by chezmoi - DO NOT EDIT DIRECTLY
# Template: ~/.local/share/chezmoi/dot_zsh_gnohj_env.tmpl
#
# For secrets and machine-specific overrides, create:
#   ~/.zsh_gnohj_env.local (gitignored, sourced at end of this file)

#-------------------------------------------------------------------------------
# User & Git Configuration
#-------------------------------------------------------------------------------
export GIT_AUTHOR_NAME="{{ .github_user_name }}"
export GIT_AUTHOR_EMAIL="{{ .github_user_email }}"
export GIT_COMMITTER_NAME="{{ .github_user_name }}"
export GIT_COMMITTER_EMAIL="{{ .github_user_email }}"
export USER_NAME="{{ .github_user_name }}"
export USER_EMAIL="{{ .github_user_email }}"

#-------------------------------------------------------------------------------
# Platform-Specific Paths
#-------------------------------------------------------------------------------
{{- if eq .chezmoi.os "darwin" }}
export HOMEBREW_PREFIX="/opt/homebrew"
export HOMEBREW_CELLAR="/opt/homebrew/Cellar"
export HOMEBREW_REPOSITORY="/opt/homebrew"
{{- else if eq .chezmoi.os "linux" }}
export HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew"
export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar"
export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew/Homebrew"
{{- end }}

#-------------------------------------------------------------------------------
# XDG Base Directory Specification
#-------------------------------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"

#-------------------------------------------------------------------------------
# Editor & Pager
#-------------------------------------------------------------------------------
export EDITOR="nvim"
export VISUAL="nvim"
export PAGER="less"
export LESS="-R"

#-------------------------------------------------------------------------------
# Tool-Specific Paths
#-------------------------------------------------------------------------------
export PNPM_HOME="$HOME/Library/pnpm"

#-------------------------------------------------------------------------------
# Environment URLs (Non-Sensitive)
#-------------------------------------------------------------------------------
export DEV="https://dev-radioedit.ihrint.com"
export STAGE="https://radioedit.ihrint.com"
export PROD="https://radioedit.iheart.com"

#-------------------------------------------------------------------------------
# Platform Info (useful for conditional logic in scripts)
#-------------------------------------------------------------------------------
export CHEZMOI_OS="{{ .chezmoi.os }}"
export CHEZMOI_ARCH="{{ .chezmoi.arch }}"

#-------------------------------------------------------------------------------
# Secrets from Bitwarden (interpolated via chezmoi)
#-------------------------------------------------------------------------------
# Secrets are fetched from Bitwarden when you run: chezmoi apply
# This happens at template-time, not at shell startup (faster!)
# Run 'rbw unlock' before 'chezmoi apply' to ensure vault is unlocked
#
# How it works:
# 1. All secrets are stored in Bitwarden under the "env-vars" folder
# 2. The template dynamically loops through all items in that folder
# 3. Each item's name becomes the environment variable name
# 4. Each item's password field becomes the value
#
# To add a new secret:
# 1. Add it to Bitwarden in the "env-vars" folder (use rbw add)
# 2. Run: rbw sync && chezmoi apply
# 3. The secret will automatically appear in this file

{{- range (output "rbw" "list" "--fields" "folder,name" "--raw" | mustFromJson) }}
{{- if eq .folder "env-vars" }}
export {{ .name }}="{{ (rbw .name).data.password }}"
{{- end }}
{{- end }}

#-------------------------------------------------------------------------------
# Machine-Specific Overrides (Optional)
#-------------------------------------------------------------------------------
# Source local overrides if they exist (for secrets not in bitwarden)
# Create ~/.zsh_gnohj_env.local and add to .gitignore
if [ -f "$HOME/.zsh_gnohj_env.local" ]; then
  source "$HOME/.zsh_gnohj_env.local"
fi
