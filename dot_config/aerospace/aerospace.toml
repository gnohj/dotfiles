#   █████╗ ███████╗██████╗  ██████╗ ███████╗██████╗  █████╗  ██████╗███████╗
#  ██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔════╝██╔══██╗██╔══██╗██╔════╝██╔════╝
#  ███████║█████╗  ██████╔╝██║   ██║███████╗██████╔╝███████║██║     █████╗  
#  ██╔══██║██╔══╝  ██╔══██╗██║   ██║╚════██║██╔═══╝ ██╔══██║██║     ██╔══╝  
#  ██║  ██║███████╗██║  ██║╚██████╔╝███████║██║     ██║  ██║╚██████╗███████╗
#  ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═╝     ╚═╝  ╚═╝ ╚═════╝╚══════╝
#
#  AeroSpace is an i3-like tiling window manager for macOS
#  https://github.com/nikitabobko/AeroSpace

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget /opt/homebrew/bin/sketchybar --reload',
  # 'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xCFEBBF83 inactive_color=0x33434c5e width=4.0',
  'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xFF03b1D3 inactive_color=2x33434c5e width=6.0',
]

# Start AeroSpace at login
start-at-login = true

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  '/opt/homebrew/bin/sketchybar --trigger aerospace_workspace_changed FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = false

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  'move-mouse window-lazy-center',
  'exec-and-forget /bin/bash -c /opt/homebrew/bin/sketchybar --trigger front_app_switched',
  'exec-and-forget /opt/homebrew/bin/sketchybar --trigger update_windows',
]


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
#outer.bottom numbers have to match presentation.sh variables. built-in retina display is excluded from presentation mode, so this only works on external monitors.
outer.bottom = [{ monitor.'^built-in retina display$' = 10 }, 10]
outer.top = [{ monitor.'^built-in retina display$' = 20 }, 52]
outer.left = 13
outer.right = 13
inner.horizontal = 10
inner.vertical = 10

[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
# alt-r = [
#   'mode resize',
#   'exec-and-forget sketchybar --trigger send_message MESSAGE="RESIZE MODE" HOLD="true"'
# ]
# alt-keypadMinus = 'resize smart -70'
# alt-keypadPlus = 'resize smart +70'
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Replace all alt- bindings with ctrl-cmd-alt-

# Layout commands
ctrl-cmd-alt-slash = 'layout tiles horizontal vertical'
ctrl-cmd-alt-comma = 'layout accordion horizontal vertical'

# Focus commands
ctrl-cmd-alt-h = 'focus left'
ctrl-cmd-alt-j = 'focus down'
ctrl-cmd-alt-k = 'focus up'
ctrl-cmd-alt-l = 'focus right'

# Move commands
ctrl-cmd-alt-shift-h = 'move left'
ctrl-cmd-alt-shift-j = 'move down'
ctrl-cmd-alt-shift-k = 'move up'
ctrl-cmd-alt-shift-l = 'move right'

# Resize commands
ctrl-cmd-alt-shift-minus = 'resize smart -50'
ctrl-cmd-alt-shift-equal = 'resize smart +50'

# Workspace commands
ctrl-cmd-alt-a = 'workspace A'
ctrl-cmd-alt-b = 'workspace B'
ctrl-cmd-alt-c = 'workspace C'
ctrl-cmd-alt-d = 'workspace D'
ctrl-cmd-alt-e = 'workspace E'
ctrl-cmd-alt-g = 'workspace G'
ctrl-cmd-alt-i = 'workspace I'
ctrl-cmd-alt-m = 'workspace M'
ctrl-cmd-alt-n = 'workspace N'
ctrl-cmd-alt-p = 'workspace P'
ctrl-cmd-alt-q = 'workspace Q'
ctrl-cmd-alt-s = 'workspace S'
ctrl-cmd-alt-t = 'workspace T'
ctrl-cmd-alt-u = 'workspace U'
ctrl-cmd-alt-v = 'workspace V'
ctrl-cmd-alt-w = 'workspace W'
ctrl-cmd-alt-x = 'workspace X'
ctrl-cmd-alt-y = 'workspace Y'
ctrl-cmd-alt-z = 'workspace Z'

# Move node to workspace commands
ctrl-cmd-alt-shift-a = 'move-node-to-workspace A'
ctrl-cmd-alt-shift-b = 'move-node-to-workspace B'
ctrl-cmd-alt-shift-c = 'move-node-to-workspace C'
ctrl-cmd-alt-shift-d = 'move-node-to-workspace D'
ctrl-cmd-alt-shift-e = 'move-node-to-workspace E'
ctrl-cmd-alt-shift-g = 'move-node-to-workspace G'
ctrl-cmd-alt-shift-i = 'move-node-to-workspace I'
ctrl-cmd-alt-shift-m = 'move-node-to-workspace M'
ctrl-cmd-alt-shift-n = 'move-node-to-workspace N'
ctrl-cmd-alt-shift-p = 'move-node-to-workspace P'
ctrl-cmd-alt-shift-q = 'move-node-to-workspace Q'
ctrl-cmd-alt-shift-s = 'move-node-to-workspace S'
ctrl-cmd-alt-shift-t = 'move-node-to-workspace T'
ctrl-cmd-alt-shift-u = 'move-node-to-workspace U'
ctrl-cmd-alt-shift-v = 'move-node-to-workspace V'
ctrl-cmd-alt-shift-w = 'move-node-to-workspace W'
ctrl-cmd-alt-shift-x = 'move-node-to-workspace X'
ctrl-cmd-alt-shift-y = 'move-node-to-workspace Y'
ctrl-cmd-alt-shift-z = 'move-node-to-workspace Z'

# Fullscreen and navigation
ctrl-cmd-alt-shift-f = 'macos-native-fullscreen'
ctrl-cmd-alt-tab = 'workspace-back-and-forth'
ctrl-cmd-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Service mode
ctrl-cmd-alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = [
  'reload-config',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'exec-and-forget opt/homebrew/bin/sketchybar --reload',
  'mode main',
]

b = [
  'exec-and-forget ~/.config/aerospace/presentation.sh on',
  'exec-and-forget opt/homebrew/bin/sketchybar --bar height=0',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'mode main',
]
shift-b = [
  'exec-and-forget ~/.config/aerospace/presentation.sh off',
  'exec-and-forget opt/homebrew/bin/sketchybar --bar height=36',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'mode main',
]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

ctrl-cmd-alt-shift-h = ['join-with left', 'mode main']
ctrl-cmd-alt-shift-j = ['join-with down', 'mode main']
ctrl-cmd-alt-shift-k = ['join-with up', 'mode main']
ctrl-cmd-alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.kjbdgfilnfhdoflbpgamdcdgpehopbep'
run = "move-node-to-workspace C"


[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace V"


[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.whimsical.desktop'
run = "move-node-to-workspace X"

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace E"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace W"


[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = "move-node-to-workspace P"


[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']


[workspace-to-monitor-force-assignment]
# 1 Monitor - Left Side
# 2 Monitor - Center
E = 1
D = 1
G = 1
L = 1
Q = 1
S = 1
X = 1
W = 1
B = 2
C = 2
F = 2
M = 2
P = 2
N = 2
T = 2
V = 2
Z = 2
