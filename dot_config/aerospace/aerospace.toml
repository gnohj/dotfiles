#   █████╗ ███████╗██████╗  ██████╗ ███████╗██████╗  █████╗  ██████╗███████╗
#  ██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔════╝██╔══██╗██╔══██╗██╔════╝██╔════╝
#  ███████║█████╗  ██████╔╝██║   ██║███████╗██████╔╝███████║██║     █████╗  
#  ██╔══██║██╔══╝  ██╔══██╗██║   ██║╚════██║██╔═══╝ ██╔══██║██║     ██╔══╝  
#  ██║  ██║███████╗██║  ██║╚██████╔╝███████║██║     ██║  ██║╚██████╗███████╗
#  ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═╝     ╚═╝  ╚═╝ ╚═════╝╚══════╝
#
#  AeroSpace is an i3-like tiling window manager for macOS
#  https://github.com/nikitabobko/AeroSpace

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

after-startup-command = [
  'exec-and-forget /opt/homebrew/bin/sketchybar',
  'exec-and-forget /opt/homebrew/bin/sketchybar --reload',
]

# Start AeroSpace at login
start-at-login = true

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  '/opt/homebrew/bin/sketchybar --trigger aerospace_workspace_changed FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = false

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  'move-mouse window-lazy-center',
  'exec-and-forget /bin/bash -c /opt/homebrew/bin/sketchybar --trigger front_app_switched',
  # Disabled: causes sketchybar to freeze due to event flooding
  # 'exec-and-forget /opt/homebrew/bin/sketchybar --trigger update_windows',
]


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
#outer.bottom numbers have to match presentation.sh variables. built-in retina display is excluded from presentation mode, so this only works on external monitors.
outer.bottom = [{ monitor.'^built-in retina display$' = 10 }, 10]
outer.top = [{ monitor.'^built-in retina display$' = 20 }, 52]
outer.left = 13
outer.right = 13
inner.horizontal = 10
inner.vertical = 10

[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration - MOVED to SKHDCRC ~/.config/skhd/skhdrc
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = [
  'reload-config',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'exec-and-forget opt/homebrew/bin/sketchybar --reload',
  'mode main',
]
b = [
  'exec-and-forget ~/.config/aerospace/presentation.sh on',
  'exec-and-forget opt/homebrew/bin/sketchybar --bar height=0',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'mode main',
]
shift-b = [
  'exec-and-forget ~/.config/aerospace/presentation.sh off',
  'exec-and-forget opt/homebrew/bin/sketchybar --bar height=36',
  'exec-and-forget opt/homebrew/bin/sketchybar --trigger hide_message',
  'mode main',
]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']


[[on-window-detected]]
if.app-id = 'com.google.Chrome'  # Google Chrome Browser
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace G"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = "move-node-to-workspace Z"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.agimnkijcaahngcdmfeangaknmldooml' # YouTube App (PWA)
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.lodlkdfmihgonocnmddehnfgiljnadcf' # Twitter X App (PWA)
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.lgnggepjiihbfdbedefdhcffnmhcahbm' # Reddit App (PWA)
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.apple.iCal' # Calendar App
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-id = 'com.apple.reminders' # Reminders App
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-id = 'com.whimsical.desktop'
run = "move-node-to-workspace X"

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace E"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace W"


[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = "move-node-to-workspace V"


[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "move-node-to-workspace F"
# run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.yanex.marta'
run = "move-node-to-workspace F"
# run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = "move-node-to-workspace F"
# run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = "move-node-to-workspace Q"


[workspace-to-monitor-force-assignment]
# 1 Monitor - Left Side
# 2 Monitor - Center
# 3 Laptop
A = 1
D = 1
E = 1
G = 1
L = 1
Q = 1
S = 1
W = 1
X = 1
U = 1
B = 2
C = 1
F = 1
V = 1
T = 2
Z = 2
M = 3  # Dedicated workspace for laptop monitor
