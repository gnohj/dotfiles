#!/usr/bin/env bash
# Test trigger - v1

echo "
🔧 Run OnChange [Before] Package Target Deployment......"

echo "--- CHEZMOI DEBUG ---"
echo "Username:     {{ .chezmoi.username }}"
echo "Host Name:    {{ .chezmoi.hostname }}"
echo "Home Directory: {{ .chezmoi.homeDir }}"
echo "Source Directory: {{ .chezmoi.sourceDir }}"
echo "OS Detected:   {{ .chezmoi.os }}"
echo "Arch Detected: {{ .chezmoi.arch }}"
echo "-------------------------"

{{- if ne .chezmoi.os "darwin" }}
echo "🚧 Skipping package installation (not macOS)
"
exit 0
{{- end }}

#-------------------------------------------------------------------------------
#--                      WezTerm Terminfo for xterm-kitty (preview images)
#-------------------------------------------------------------------------------
if ! infocmp xterm-kitty &>/dev/null; then
  echo "xterm-kitty terminfo not found. Installing..."
  tempfile=$(mktemp)
  if curl -o "$tempfile" https://raw.githubusercontent.com/kovidgoyal/kitty/master/terminfo/kitty.terminfo; then
    echo "Downloaded kitty.terminfo successfully."
    tic -x -o ~/.terminfo "$tempfile"
    echo "xterm-kitty terminfo installed successfully."
  else
    echo "Failed to download kitty.terminfo."
  fi
  rm "$tempfile"
fi

echo "📋 Boot Summary:"
echo "✅ xterm-kitty terminfo: Available"
echo "🎉 System environment setup complete!"

#-------------------------------------------------------------------------------
#--                      macOS System Configuration
#-------------------------------------------------------------------------------
# Settings that MUST remain here (no nix-darwin support):
#   - Login items (no nix-darwin support - must use osascript)
#     Note: launchd.user.agents only adds to "Allow in Background", not "Login Items"
#-------------------------------------------------------------------------------

echo "Configuring macOS system preferences..."

osascript -e 'tell application "System Preferences" to quit' 2>/dev/null
osascript -e 'tell application "System Settings" to quit' 2>/dev/null

# Create Developer directory
echo "Creating ~/Developer directory..."
mkdir -p "$HOME/Developer"

# Create Obsidian directory
echo "Creating ~/Obsidian directory..."
mkdir -p "$HOME/Obsidian"

echo "Configuring login items"
# List of applications to add to login items
# NOTE: Only apps that exist in /Applications (GUI apps only, not LaunchAgents)
loginItems=(
  "AeroSpace"
  "BetterDisplay"
  "Homerow"
  "Mouseless"
  "Raycast"
  "Shottr"
)

for app in "${loginItems[@]}"; do
  if [ -d "/Applications/$app.app" ]; then
    if osascript -e "tell application \"System Events\" to get the name of every login item" | grep -q "$app"; then
      echo "⏭️  $app already in login items"
    else
      osascript -e "tell application \"System Events\" to make login item at end with properties {name: \"$app\", path: \"/Applications/$app.app\", hidden:true}" 2>/dev/null
      echo "✅  $app added to login items"
    fi
  else
    echo "❌  $app not found in /Applications"
  fi
done

echo "  📝 Manual setup required:"
echo "  - System Preferences > Keyboard > Keyboard Shortcuts > Disable additional shortcuts that might conflict"
echo "  - Add global git ignore file to home directory - ~/.gitignore_global"
echo "  - Install apps from App Store"
echo "  - Clone personal/private repos"
echo "  - System Settings → General → Login Items → Allow in the background: AeroSpace, Bjango Pty Ltd, Borders, Caddy, github-auto-push, Homerow.app, iStats Menus, iStats Menus.app, Karabiner Elements Non Privileged App, Karabiner Elements Priviledged Daemon, Logi Options+, Logitech.inc, sketchybar, skhd"
echo "  - Applications to add to Accessibility permissions: AeroSpace, AEServer, BetterDisplay, borders, Ghostty, Homerow, Logi Options+, Raycast, sketchybar, skhd, Visual Studio Code, WezTerm"
echo "  - Applications to add to Automation permissions: AeroSpace, Ghostty, Only Switch, osascript, Raycast, sketchybar, Sublime Text, Visual Studio Code, VLC, WezTerm"
echo "  - Applications to add to Input Monitoring permissions: AeroSpace, Discord, karabiner_grabber, karabiner_observer, Karabiner-EventViewer, Logi Options+"
echo "  - Applications to add to App Management permissions: Raycast"
echo "  - Applications to add to Full Disk Access permissions: Ghostty"

#-------------------------------------------------------------------------------
#--                      Gatekeeper Bypass for Specific Apps
#-------------------------------------------------------------------------------
# Some apps are not properly signed/notarized for macOS
# Remove quarantine attribute to bypass Gatekeeper warnings

echo "Applying Gatekeeper bypass for unsigned apps..."

# Note: Shottr is properly signed, no Gatekeeper bypass needed

echo "📋 System Summary:"
echo "✅ Configured in this script:"
echo "  • Login items: $(osascript -e 'tell application "System Events" to count login items' 2>/dev/null || echo '0') apps configured"
echo "  • Gatekeeper bypass: Applied for unsigned apps"
echo ""
echo "📝 Manual Steps Remaining:"
echo "  • TCC Permissions (Accessibility, Automation, etc.)"
echo "  • Background app permissions"
echo "  • Keyboard shortcut conflicts"
echo "  • Git global ignore file setup"
echo "  • App Store installations"
echo "  • Clone personal repositories"
echo ""
echo "🎉 Run OnChange [Before] Package Install Setup Complete!"
