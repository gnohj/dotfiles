#!/usr/bin/env bash
# Secret list hash: {{ include "dot_config/bitwarden/vars.txt" | sha256sum }}
#
# This script runs on load, when this template changes, or when the secret list hash (vars.text) changes (detected by hash)
# It fetches all secrets from Bitwarden and writes them to a separate file, which then gets sourced by ~/.zsh_gnohj_env

set -euo pipefail

echo "Secret list changed, fetching from Bitwarden..."

# Check if rbw is available
if ! command -v rbw &> /dev/null; then
  echo "Error: rbw not found. Install via nix-darwin."
  exit 1
fi

# Check if vault is unlocked
if ! rbw unlocked &> /dev/null; then
  echo "Error: Bitwarden vault is locked."
  echo "Run 'eval \$(rbw unlock)' to unlock the vault."
  exit 1
fi

# Sync vault
echo "Syncing Bitwarden vault..."
rbw sync

# Create secrets file at home dir ~./.zsh_gnohj_env.secrets
SECRETS_FILE="{{ .chezmoi.homeDir }}/.zsh_gnohj_env.secrets"
echo "# Generated by chezmoi from Bitwarden - DO NOT EDIT" > "$SECRETS_FILE"
echo "# Last updated: $(date)" >> "$SECRETS_FILE"
echo "" >> "$SECRETS_FILE"

# Fetch each secret and write to file
{{ range (include "dot_config/bitwarden/vars.txt" | trim | splitList "\n") -}}
echo "Fetching {{ . }}..."
SECRET_VALUE=$(rbw get "{{ . }}" 2>/dev/null || echo "")
if [ -n "$SECRET_VALUE" ]; then
  echo 'export {{ . }}="'"$SECRET_VALUE"'"' >> "$SECRETS_FILE"
else
  echo "Warning: {{ . }} not found in Bitwarden"
fi
{{ end }}

# Secure the secrets file (read/write for user only)
chmod 600 "$SECRETS_FILE"

echo "âœ“ Secrets written to $SECRETS_FILE (permissions: 600)"
echo "Run 'source ~/.zshrc' to load updated secrets"
