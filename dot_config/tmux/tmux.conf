# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#
# Terminal multiplexer
# https://github.com/tmux/tmux

source "$HOME/.config/colorscheme/active/active-colorscheme.sh"


set -sg terminal-overrides ",*:RGB"

set -g default-terminal "${TERM}"

set -g status-style 'bg=default'

# Border lines between panes are thicker
# single -> single lines using ACS or UTF-8 characters
# double -> double lines using UTF-8 characters
# heavy  -> heavy lines using UTF-8 characters
# simple -> simple ASCII characters
# number -> the pane number
set -g pane-border-lines single

# Indicate active pane by colouring only half of the border in windows with 
# exactly two panes, by displaying arrow markers, by drawing both or neither.
# [off | colour | arrows | both]
set -g pane-border-indicators both

# Increase scroll history
set-option -g history-limit 10000

set -g set-clipboard on      # use system clipboard
set -gq allow-passthrough on # Enables passthrough mode in Tmux 3.3+ for rendering images via nvim - image.nvim
set -g visual-activity off # Automatically show/hide images when switching tabs (windows) per session

set-window-option -g xterm-keys on

# Set Tmux prefix from Ctrl+b to Ctrl+a
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

unbind %
# bind | split-window -h 
unbind '"'
# bind - split-window -v
# Open panes in cwd
bind '-' split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"


unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

bind j resize-pane -D 25
bind k resize-pane -U 25
bind l resize-pane -R 25
bind h resize-pane -L 25

bind -r m resize-pane -Z

set -g mouse on

set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
bind-key -T copy-mode-vi 'q' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouseT


# sesh - global sessions full screen view
bind-key "K" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% --no-border \
    --ansi \
    --list-border \
    --no-sort --prompt '⚡  ' \
    --header '^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --color 'list-border:6,input-border:3,preview-border:4,header-bg:-1,header-border:6,bg+:$gnohj_color16,fg+:$gnohj_color14,hl+:$gnohj_color04,fg:$gnohj_color02,info:$gnohj_color09,prompt:$gnohj_color04,pointer:$gnohj_color04,marker:$gnohj_color04,header:$gnohj_color09' \
    --input-border \
    --header-border \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-b:abort' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}' \
)\""

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# other bindings
colorscheme_selector="~/.config/colorscheme/colorscheme-selector.sh"
unbind 9
bind-key -r 9 run-shell "tmux neww -n '🎨 Theme' $colorscheme_selector"

# bind -N "⌘+g lazygit" g run-shell '
#   PANE_NVIM_CWD=$(tmux show-environment -t "#{pane_id}" NVIM_CWD_#{pane_id} 2>/dev/null | cut -d= -f2)
#   PANE_CWD=$(tmux show-environment -t "#{pane_id}" PANE_CWD 2>/dev/null | cut -d= -f2)
#   DIR="${PANE_NVIM_CWD:-${PANE_CWD:-#{pane_current_path}}}"
#   tmux new-window -c "$DIR" -n "🤖" "LG_CONFIG_FILE=~/.config/lazygit/config.yml lazygit"
# '
bind -N "⌘+g lazygit" g run-shell '
  PANE_NVIM_CWD=$(tmux show-environment -t "#{pane_id}" NVIM_CWD_#{pane_id} 2>/dev/null | cut -d= -f2)
  PANE_CWD=$(tmux show-environment -t "#{pane_id}" PANE_CWD 2>/dev/null | cut -d= -f2)
  DIR="${PANE_NVIM_CWD:-${PANE_CWD:-#{pane_current_path}}}"
  tmux display-popup -E -w 90% -h 90% -d "$DIR" "
    git rev-parse --is-inside-work-tree >/dev/null 2>&1 && LG_CONFIG_FILE=~/.config/lazygit/config.yml lazygit || exit 0
  "
'
run-shell 'tmux set -g popup-border-style "fg=$gnohj_color24"'

bind -N "⌘+j terminal" j run-shell '
  tmux display-popup -E -d "~" "trap \"exit 0\" EXIT; zsh"
'

bind -N "⌘+Z kill current session" Z kill-session

bind-key T run-shell "~/.config/tmux/toggle-terminal-transparency.sh"

# remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 10

# move tmux bar to top instead of bottom
set -g status-position top

# renumber windows if you close one
set -g renumber-windows on

# TPM- I have to expliclity set global env var TMUX_PLUGIN_MANAGER_PATH because when
# .tmux.conf has been relocated to new location.. tpm gets confused on where the tpm path is.. so DUMB.
# CATPPUCCIN - I pinned to 0.3.0 beacuse a new version had breaking changes
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.config/tmux/plugins/"
set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  christoomey/vim-tmux-navigator  \
  catppuccin/tmux#v0.3.0          \
'

# set -g @plugin 'catppuccin/tmux#latest'
# or frappe, macchiato, mocha
set -g @catppuccin_flavor 'mocha'

run-shell "~/.config/tmux/set_tmux_colors.sh"

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_status_modules_left "session"

# As 'man tmux' specifies:
# Execute the first command if shell-command (run with /bin/sh) returns success or the second command otherwise
set -g @catppuccin_status_modules_right "null"

# `user` and `host` are kind of useless, dont change when you ssh to devices
# set -g @catppuccin_status_modules_right "directory user host"
set -g @catppuccin_status_left_separator ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_connect_separator "no"

# set -g @catppuccin_status_modules_right "directory"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"

# This can be set to "icon" or "all" if set to "all" the entire tmux session
# name has color
# set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_fill "all"
#
# If you set this to off, the tmux line completely dissappears
set -g @catppuccin_status_default "on"


# set -g @plugin 'fabioluciano/tmux-tokyo-night'
# set -g @theme_transparent_status_bar 'true'
# set -g @theme_transparent_left_separator_inverse ''
# set -g @theme_transparent_right_separator_inverse ''
# set -g @theme_left_separator ''
# set -g @theme_right_separator ''
# set -g @theme_plugins 'datetime,weather,battery'

# Zero-out escape time delay for quicker response
set -s escape-time 3


# When pressing prefix+s to list sessions, I want them sorted by time
# That way my latest used sessions show at the top of the list
# -s starts with sessions collapsed (doesn't show windows)
# -Z zooms the pane (don't uderstand what this does)
# -O specifies the initial sort field: one of ‘index’, ‘name’, or ‘time’ (activity).
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
#
# bind s choose-tree -Zs -O time
# bind s choose-tree -Zs -O time -y
bind s choose-tree -Zs -O time -F "#{session_windows}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

# ADD THESE LINES AFTER TPM to get choose-tree color to work properly:
# TODO: can't set color scheme.. seems like racecondition with tpm
# set -g mode-style "fg=$gnohj_color03,bg=$gnohj_color16"
# set -g mode-style "fg=#44FFb1,bg=#214969"

set-option -g focus-events on
#
# # When a pane gains focus, command it to have a transparent background
set-hook -g pane-focus-in 'select-pane -P "bg=default"'
#
# # When a pane loses focus, command it to have a solid black background
set-hook -g pane-focus-out 'select-pane -P "bg=$gnohj_color10"'

# (Optional) Make the border lines thicker
# set -g pane-border-lines heavy

# Make inactive pane borders dim (using a Catppuccin color)
# set-option -g pane-border-style "fg=$gnohj_color05"
# Make the active pane border bright and noticeable
# set-option -g pane-active-border-style "fg=$gnohj_color03"

